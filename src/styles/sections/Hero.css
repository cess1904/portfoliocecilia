/* ===== HERO ===== */
.hero {
  background-color: #ddebe6;
  padding: clamp(12px, 4vw, 28px) clamp(16px, 5vw, 40px);
  margin-block-end: -60px;
}

/* Ligne unique gauche â†” droite */
.hero-content {
  display: flex;
  align-items: center;
  justify-content: space-between;
  flex-wrap: nowrap; /* ðŸ”’ reste sur une seule ligne */
  gap: clamp(8px, 2vw, 24px);
  max-width: 1200px;
  margin: 0 auto;
}

/* Gauche : logo + titre */
.hero-left {
  display: flex;
  align-items: center;
  gap: clamp(8px, 1.4vw, 16px);
  flex: 1 1 auto; /* prend la place dispo */
  min-width: 0; /* Ã©vite les casses */
}

.hero-logo {
  width: clamp(40px, 7vw, 64px); /* ajuste si Ã§a ne tient pas */
  height: auto;
  flex: 0 0 auto;
}

.hero-title {
  color: #545454;
  margin: 0;
  line-height: 1.2;
  font-size: clamp(0.9rem, 2.2vw, 1.2rem); /* â†“ rÃ©trÃ©cit si besoin */
  white-space: nowrap; /* ne va pas Ã  la ligne */
}

/* Droite : bouton */
.hero-right {
  flex: 0 0 auto; /* taille du contenu seulement */
  margin-left: auto; /* pousse Ã  droite */
}

/* Si ton Buttoncontact.jsx rend un <button>, ajoute cette classe dans son CSS */
.btn-contact {
  border: 2px solid #0f4c5c;
  background: transparent;
  color: #f7ecec;
  padding: 10px 18px;
  border-radius: 999px;
  font-size: 0.95rem;
  cursor: pointer;
  transition: 0.25s;
  white-space: nowrap; /* reste sur une ligne */
}
.btn-contact:hover {
  background: #0f4c5c;
  color: #fff;
}

/* â€”â€”â€” Option : micro-ajustements si Ã§a force encore Ã  passer Ã  la ligne â€”â€”â€” */
@media (max-width: 480px) {
  .hero {
    margin-block-end: -30px;
  }
  .hero-logo {
    width: 42px;
  }
  .hero-title {
    font-size: 0.9rem;
  }
  .btn-contact {
    padding: 8px 12px;
    font-size: 0.9rem;
  }
}
